class NumbersError(Exception):
    pass


class EvenError(NumbersError):
    pass


class NegativeError(NumbersError):
    pass


def no_even(numbers):
    if all(x % 2 != 0 for x in numbers):
        return True
    raise EvenError("–í —Å–ø–∏—Å–∫–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á—ë—Ç–Ω—ã—Ö —á–∏—Å–µ–ª")


def no_negative(numbers):
    if all(x >= 0 for x in numbers):
        return True
    raise NegativeError("–í —Å–ø–∏—Å–∫–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª")


def main():
    print("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª:")
    try:
        numbers = [int(x) for x in input().split()]
        if no_negative(numbers) and no_even(numbers):
            print(f"–°—É–º–º–∞ —á–∏—Å–µ–ª —Ä–∞–≤–Ω–∞: {sum(numbers)}.")
    except NumbersError as e:  # –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ –∏—Å–∫–ª—é—á–µ–Ω–∏—é –∫–∞–∫ –∫ –æ–±—ä–µ–∫—Ç—É
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}.")
    except Exception as e:
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}.")


if __name__ == "__main__":
    main()

start = input()
end = input()
# –ú–µ—Ç–æ–¥ lstrip("-"), —É–¥–∞–ª—è—é—â–∏–π —Å–∏–º–≤–æ–ª—ã "-" –≤ –Ω–∞—á–∞–ª–µ —Å—Ç—Ä–æ–∫–∏, –Ω—É–∂–µ–Ω –¥–ª—è —É—á—ë—Ç–∞
# –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª, –∏–Ω–∞—á–µ isdigit() –≤–µ—Ä–Ω—ë—Ç –¥–ª—è –Ω–∏—Ö False
if not (start.lstrip("-").isdigit() and end.lstrip("-").isdigit()):
    print("–≤–≤–µ—Å—Ç–∏ –¥–≤–∞ —á–∏—Å–ª–∞.ü•∞")
else:
    interval = range(int(start), int(end) + 1)
    if 0 in interval:
        print("–î–∏–∞–ø–∞–∑–æ–Ω —á–∏—Å–µ–ª —Å–æ–¥–µ—Ä–∂–∏—Ç 0.")
    else:
        print(";".join(str(1 / x) for x in interval))
